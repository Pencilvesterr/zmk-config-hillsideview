#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#include <behaviors/studio_unlock.dtsi>

#define DEF 0
#define WIN 1
#define SWP 2
#define SYM 3
#define NUM 4
#define ADJ 5
#define QUICK_TAP_MS 175

&sk {
    release-after-ms = <600>;
    quick-release;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <SYM NUM>;
            then-layer = <ADJ>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps {
            timeout-ms = <50>;
            key-positions = <24 35>;
            bindings = <&caps_word>;
        };

        // symbols

        cb_excl {
            bindings = <&kp EXCL>;
            key-positions = <1 13>;
            timeout-ms = <30>;
        };

        cb_at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
            timeout-ms = <30>;
        };

        cb_hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
            timeout-ms = <30>;
        };

        cb_dllr {
            bindings = <&kp DLLR>;
            key-positions = <4 16>;
            timeout-ms = <30>;
        };

        cb_prcnt {
            bindings = <&kp PRCNT>;
            key-positions = <5 17>;
            timeout-ms = <30>;
        };

        cb_caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
            timeout-ms = <30>;
        };

        cb_amps {
            bindings = <&kp AMPS>;
            key-positions = <7 19>;
            timeout-ms = <30>;
        };

        cb_mult {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
            timeout-ms = <30>;
        };

        cb_lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <9 21>;
            timeout-ms = <30>;
        };

        cb_rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <10 22>;
            timeout-ms = <30>;
        };
    };

    behaviors {
        lt_qk: layer_toggle_quick {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&kp>;
        };

        mt_sk: mod_tap_sticky {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            bindings = <&sk>, <&kp>;
        };

        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lswp: left_swp {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LGUI>, <&mo 2>, <&tog 2>;
        };

        rswp: right_swap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk RGUI>, <&mo 2>, <&tog 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DEFAULT";
            bindings = <
&kp GRAVE      &kp N1          &kp N2         &kp N3           &kp N4        &kp N5        &kp N6    &kp N7         &kp N8          &kp N9           &kp N0             &kp MINUS
&ht GRAVE TAB  &ht N1 Q        &ht N2 W       &ht N3 E         &ht N4 R      &ht N5 T      &ht N6 Y  &ht N7 U       &ht N8 I        &ht N9 O         &ht N0 P           &kp PIPE
&kp ESC        &kp A           &kp S          &kp D            &kp F         &kp G         &kp H     &kp J          &kp K           &kp L            &kp SEMI           &kp SQT
&sk LSHFT      &mt_sk LCTRL Z  &mt_sk LALT X  &kp C            &kp V         &kp B         &kp N     &kp M          &kp COMMA       &mt_sk RALT DOT  &mt_sk RCTRL FSLH  &sk RSHFT
               &lswp           &kp SPACE      &lt_qk SYM BSPC                                                       &lt_qk NUM DEL  &kp RET          &rswp
            >;
        };

        winlinux_layer {
            display-name = "WINLINUX";
            bindings = <
&trans  &trans         &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans            &trans
&trans  &trans         &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans            &trans
&trans  &trans         &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans            &trans
&trans  &mt_sk LGUI Z  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &mt_sk RGUI FSLH  &trans
        &kp LCTRL      &trans  &trans                                      &trans  &trans  &kp RCTRL
            >;
        };

        swap_layer {
            display-name = "SWAP";
            bindings = <
&kp MINUS  &kp N0             &kp N9           &kp N8          &kp N7      &kp N6        &kp N5    &kp N4      &kp N3           &kp N2         &kp N1          &kp GRAVE      
&kp PIPE   &ht N0 P           &ht N9 O         &ht N8 I        &ht N7 U    &ht N6 Y      &ht N5 T  &ht N4 R    &ht N3 E         &ht N2 W       &ht N1 Q        &ht GRAVE TAB
&kp SQT    &kp SEMI           &kp L            &kp K           &kp J       &kp H         &kp G     &kp F       &kp D            &kp S          &kp A           &kp ESC
&sk RSHFT  &mt_sk RCTRL FSLH  &mt_sk RALT DOT  &kp COMMA       &kp M       &kp N         &kp B     &kp V       &kp C            &mt_sk LALT X  &mt_sk LCTRL Z  &sk LSHFT
           &tog SWP           &kp RET          &lt_qk NUM DEL                                                  &lt_qk SYM BSPC  &kp SPACE      &tog 2
            >;
        };

        sym_layer {
            display-name = "SYMBOLS";
            bindings = <
&trans  &trans    &trans  &trans    &trans    &trans         &trans     &trans     &trans           &trans    &trans    &trans
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT      &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans    &trans  &trans    &trans    &trans         &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans         &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
        &trans    &trans  &trans                                                   &trans           &trans    &trans
            >;
        };

        num_layer {
            display-name = "NUMBERS";
            bindings = <
&trans   &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10     &trans
&kp TAB  &ht F1 N1  &ht F2 N2  &ht F3 N3  &ht F4 N4  &ht F5 N5      &ht F6 N6  &ht F7 N7  &ht F8 N8  &ht F9 N9  &ht F10 N0  &trans
&trans   &trans     &trans     &trans     &trans     &trans         &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans      &trans
&trans   &trans     &trans     &trans     &trans     &trans         &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans      &trans
         &trans     &trans     &trans                                                     &trans     &trans     &trans
            >;
        };

        adj_layer {
            display-name = "ADJUST";
            bindings = <
&trans       &trans    &trans  &trans  &trans  &trans       &trans       &trans    &trans      &trans        &trans      &trans
&bootloader  &trans    &trans  &trans  &trans  &trans      &out OUT_TOG  &trans    &trans      &trans        &trans      &bootloader
&sys_reset   &trans    &trans  &trans  &trans  &trans     &studio_unlock &trans    &trans      &trans        &trans      &sys_reset
&bt BT_CLR   &bt BT_SEL 0       &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4         &kp C_PREV    &kp C_PP  &kp C_NEXT  &kp C_VOL_UP  &kp C_MUTE  &kp C_VOL_DN
             &ext_power EP_TOG  &to WIN          &trans                                                                         &trans      &to DEF       &trans
            >;
        };
    };
};
